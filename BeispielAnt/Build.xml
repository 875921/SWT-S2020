<?xml version="1.0" encoding="UTF-8"?>
<!-- ====================================================================== 
     02.07.2020 14:53:00                                                        
     project    
     description
                   
     TiXX BÃ¶hXXX
     Softwaretechnik (BHTB MIB 13 S20)
     s514XXX@beuth-hochschule.de
     MatrikelNummer: 776XXX                                                                
     ====================================================================== -->
<project name="BeispielAnt" default="run" basedir=".">
	<!-- Sets variables which can later be used -->
	<property environment="env" />
	<property name="src.dir" location="src" />
	<property name="build.dir" location="bin" />
	<property name="dist.dir" location="dist" />
	<property name="docs.dir" location="docs" />
	<property name="versionFileName" value="build.properties" />
	<property file="${versionFileName}" />
	<property name="currentVersion" value="1.0" />
	<!-- Variables used for JUnit testing -->
	<property name="test.dir" location="Tests" />
	<property name="output.dir" value="junit" />
	<property name="debuglevel" value="source,lines,vars" />
	<property name="test.report.dir" location="testreport" />
	<property name="build.sysclasspath" value="last" />

	<path id="JUnit 4.libraryclasspath">
		<pathelement location="C:/Users/tinob/.p2/pool/plugins/org.junit_4.13.0.v20200204-1500.jar" />
		<pathelement location="C:/Users/tinob/.p2/pool/plugins/org.hamcrest.core_1.3.0.v20180420-1519.jar" />
	</path>

	<path id="BeispielAnt.classpath">
		<pathelement location="bin" />
		<path refid="JUnit 4.libraryclasspath" />
	</path>

	<path id="run.(default package).classpath">
		<path refid="BeispielAnt.classpath" />
		<path refid="JUnit 4.libraryclasspath" />
	</path>

	<path id="run.Tests.classpath">
		<path refid="BeispielAnt.classpath" />
		<path refid="JUnit 4.libraryclasspath" />
	</path>

	<path id="run.BeispielBerechnungTest.classpath">
		<path refid="BeispielAnt.classpath" />
		<path refid="JUnit 4.libraryclasspath" />
	</path>

	<path id="run.BeispielBerechnungTest.classpath">
		<path refid="BeispielAnt.classpath" />
		<path refid="JUnit 4.libraryclasspath" />
	</path>

	<!--Create the default package-->
	<target name="default package">
		<mkdir dir="${output.dir}" />
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<jvmarg line="-ea" />
			<classpath refid="run.(default package).classpath" />
		</junit>
		<echo message="========== creation of default package build DONE ==========" />
	</target>

	<!-- Collective task -->
	<target name="all" depends="run, calculate.version.build, compile, clean, default package, docs, help, jar, junitreport, junit Test, makedir, update.version.build" description="Builds all Targets">
		<echo message="========== Build (all) DONE ==========" />
	</target>

	<!-- Calculate the buildversion-->
	<target name="calculate.version.build">
		<script language="javascript">
			<![CDATA[             
		            var currentVersion = project.getProperty("currentVersion");
		            var oldVersion = project.getProperty("version.number");
		            var buildNumber = project.getProperty("build.number");
		            if (!currentVersion.equals(oldVersion)){
		                project.setProperty("currentBuild", 1);
		            } else {
		                var newBuildNumber = ++buildNumber;
		                project.setProperty("currentBuild", newBuildNumber);
		            }
		        ]]>
		</script>
		<echo message="==========  calculating of current Version DONE ==========" />
	</target>

	<!--Create a classpath container which can be later used in the ant task-->
	<path id="build.classpath">
		<fileset dir="lib">
			<include name="**/*.jar" />
			<include name="**/*.zip" />
			<include name="**/*.class" />
		</fileset>
	</path>

	<!-- Deletes the existing build, docs and dist directory-->
	<target name="clean">
		<delete dir="${build.dir}" />
		<delete dir="${docs.dir}" />
		<delete dir="${dist.dir}" />
		<delete dir="${test.report.dir}" />
		<delete dir="${defaultdist.dir}" />
		<delete>
			<fileset dir="." includes="**/*~" defaultexcludes="no" />
		</delete>
		<echo message="==========  cleanup DONE ==========" />
	</target>

	<!-- Compiles the java code Main(including the usage of library for JUnit -->
	<target name="compile" depends="clean, makedir">
		<javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="build.classpath" debug="false" debuglevel="lines,source" optimize="true">
			<classpath refid="JUnit 4.libraryclasspath" />
		</javac>

		<!-- Compiles the java code Test for JUnit -->
		<javac srcdir="${test.dir}" destdir="${build.dir}" classpathref="JUnit 4.libraryclasspath" debug="true" debuglevel="lines,source" optimize="true">
		</javac>
		<echo message="==========  Compile DONE ==========" />
	</target>

	<!-- Creates Javadoc -->
	<target name="docs" depends="compile">
		<javadoc packagenames="src" sourcepath="${src.dir}" destdir="${docs.dir}">
			<!--files include all directorys-->
			<fileset dir="${src.dir}">
				<include name="**" />
			</fileset>
		</javadoc>
		<echo message="==========  Build (Javadoc) DONE ==========" />
	</target>

	<!-- check for XSD support in the parser -->
	<condition property="xmlschema.present">
		<or>
			<parsersupports feature="http://apache.org/xml/features/validation/schema"/>
			<parsersupports feature="http://java.sun.com/xml/jaxp/properties/schemaSource"/>
		</or>
	</condition>

	<!-- generate the projecthelp -->
	<target name="help">
		<java classname="org.apache.tools.ant.Main">
			<arg value="-projecthelp" />
			<arg value="-buildfile" />
			<arg value="${ant.file}" />
		</java>
		<!-- download files from apache.org -->
		<get dest="downloads">
			<url url="https://ant.apache.org/index.html" />
			<url url="https://ant.apache.org/faq.html" />
		</get>
		<get src="https://www.apache.org/index.html" dest="Index" verbose="true" usetimestamp="true" />
	</target>

	<!--Creates the deployable jar file  -->
	<target name="jar" depends="compile">
		<mkdir dir="${dist.dir}" />
		<jar destfile="${dist.dir}/${ant.project.name}.jar" basedir="${build.dir}">
			<fileset dir="${build.dir}" />
			<restrict>
				<archives>
					<zips>
						<fileset dir="lib" includes="**/*.jar" />
					</zips>
				</archives>
			</restrict>
			<manifest>
				<attribute name="Main-Class" value="main" />
			</manifest>
		</jar>
		<echo message="========== Build (Done Building (JAR)) DONE ==========" />
	</target>

	<!-- Run the JUnit Tests + Output is XML, could also be plain-->
	<target name="junit Test" depends="compile">
		<junit fork="yes" printsummary="withOutAndErr">
			<formatter type="xml" />
			<jvmarg line="-ea" />
			<classpath refid="run.Tests.classpath" />
			<batchtest todir="${test.report.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test*.java" />
				</fileset>
			</batchtest>
		</junit>
		<echo message="========== JUnit Test DONE ==========" />
	</target>

	<!-- JUnit reports -->
	<target name="junitreport">
		<junitreport todir="${output.dir}">
			<fileset dir="${output.dir}">
				<include name="TEST-*.xml"/>
			</fileset>
			<report format="frames" todir="${output.dir}"/>
		</junitreport>
	</target>

	<!-- Creates the  build  directory-->
	<target name="makedir">
		<mkdir dir="${build.dir}" />
		<mkdir dir="${docs.dir}" />
		<mkdir dir="${dist.dir}" />
		<mkdir dir="${test.report.dir}" />
		<mkdir dir="${output.dir}" />
		<echo message="========== creaion of build directory DONE ==========" />
	</target>

	<!-- Create one line per classpath element-->
	<pathconvert pathsep="${line.separator}" property="echo.classpath" refid="JUnit 4.libraryclasspath" />

	<!-- Write the result to the console -->
	<echo message="The following classpath is associated with junit.class.path " />
	<echo message="${echo.classpath}" />

	<!-- run program  -->
	<target name="run" depends="jar, junit Test" description="Start the program.">
		<tstamp>
			<format property="time.of.day" pattern="hh:mm aa " locale="de" />
		</tstamp>
		<echo message="========== Program was started: ${time.of.day} ==========" />
	</target>

	<!-- Creates the new buildversion-->
	<target name="update.version.build" depends="calculate.version.build">
		<propertyfile file="${versionFileName}">
			<entry key="build.number" type="int" operation="=" value="${currentBuild}" />
			<entry key="version.number" type="string" operation="=" value="${currentVersion}" />
		</propertyfile>
		<echo message="New version: ${currentVersion}.${currentBuild}" />
	</target>
</project>